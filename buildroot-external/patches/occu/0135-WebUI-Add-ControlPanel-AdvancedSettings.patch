--- occu/WebUI/www/config/control_panel.cgi.orig
+++ occu/WebUI/www/config/control_panel.cgi
@@ -208,8 +208,27 @@
   }
   incr i
 
+  puts {
+    <td>
+      <div class="cpButton">
+        <div class="StdTableBtn CLASS21701" onclick="showAdvancedSettingsCP()">${btnSysConfAdvancedSettings}</div>
+        <div class="StdTableBtnHelp"><img id="showAdvancedSettingsCPHelp" src="/ise/img/help.png"></div>
+      </div>
+    </td>
+   }
+   incr i
+
 set COL_COUNT 4
 
+if { $i == $COL_COUNT } {
+  puts {
+    <td class="_CLASS21702"></td>
+    </tr>
+    <tr>
+  }
+  set i 0
+}
+
 if { "[read_var /etc/config/tweaks CP_DEVCONFIG]" != "" } {
   puts "<td><div class=\"cpButton\">"
   puts "<div class=\"StdTableBtn CLASS21701\" onclick=\"window.open('/tools/devconfig.cgi?sid=$sid');\">DevConfig</div>"
@@ -329,7 +348,7 @@
     };
 
     function setTooltips() {
-      var helpContainer = ["#showMaintenanceCPHelp","#showSecurityCPHelp","#showTimeCPHelp","#showNetworkCPHelp","#newFirewallConfigDialogHelp","#showBidCosConfigHelp","#showSoftwareCPHelp", "#showCouplingCPHelp", "#showGeneralSettingsCPHelp", "#showSecuritySettingsCPHelp"];
+      var helpContainer = ["#showMaintenanceCPHelp","#showSecurityCPHelp","#showTimeCPHelp","#showNetworkCPHelp","#newFirewallConfigDialogHelp","#showBidCosConfigHelp","#showSoftwareCPHelp", "#showCouplingCPHelp", "#showGeneralSettingsCPHelp", "#showSecuritySettingsCPHelp", "#showAdvancedSettingsCPHelp"];
       var help = [
         "<h1>"+translateKey("btnSysConfCentralMaintenace")+"</h1><ul><li>"+translateKey("lblSysConfCentralMaintenance1")+"</li><li>"+translateKey("lblSysConfCentralMaintenance2")+"</li><li>"+translateKey("lblSysConfCentralMaintenance3")+"</li></ul>",
         "<h1>"+translateKey("btnSysConfSecurity")+"</h1><ul><li>"+translateKey("lblSysConfSecurity1")+"</li><li>"+translateKey("lblSysConfSecurity2")+"</li><li>"+translateKey("lblSysConfSecurity3")+"</li><li>"+translateKey("lblSysConfSecurity4")+"</li><li>"+translateKey("lblSysConfSecurity5")+"</li><li>"+translateKey("lblSysConfSecurity6")+"</li><li>"+translateKey("lblSysConfSecurity7")+"</li><li>"+translateKey("lblSysConfSecurity8")+"</li></ul>",
@@ -340,7 +359,8 @@
         "<h1>"+translateKey("btnSysConfAdditionalSoft")+"</h1><ul><li>"+translateKey("lblSysConfAdditionalSoft1")+"</li><li>"+translateKey("lblSysConfAdditionalSoft2")+"</li></ul>",
         "<h1>"+translateKey("btnSysConfCoupling")+"</h1><ul><li>OSRAM Lightify</li><li>Philips Hue</li></ul>",
         "<h1>"+translateKey("btnSysConfGeneralSettings")+"</h1><ul><li>"+translateKey("lblSysConfStorage")+"</li><li>"+translateKey("lblSysConfSetPowerCost")+"</li></ul>",
-        "<h1>"+translateKey("btnSecuritySettings")+"</h1><ul><li>"+translateKey("lblSecuritySettings1")+"</li><li>"+translateKey("lblSecuritySettings2")+"</li></ul>"
+        "<h1>"+translateKey("btnSecuritySettings")+"</h1><ul><li>"+translateKey("lblSecuritySettings1")+"</li><li>"+translateKey("lblSecuritySettings2")+"</li></ul>",
+        "<h1>"+translateKey("btnSysConfAdvancedSettings")+"</h1><ul><li>"+translateKey("lblSysConfAdvancedSettings1")+"</li></ul>"
         ];
 
        jQuery.each(helpContainer, function(index, container){
--- occu/WebUI/www/config/cp_advancedsettings.cgi.orig
+++ occu/WebUI/www/config/cp_advancedsettings.cgi
@@ -0,0 +1,657 @@
+#!/bin/tclsh
+source once.tcl
+sourceOnce cgi.tcl
+sourceOnce session.tcl
+sourceOnce common.tcl
+
+load tclrpc.so
+load tclrega.so
+
+set INETCHECKFILENAME "/etc/config/internetCheckDisabled"
+set RPI4USB3CHECKFILENAME "/etc/config/rpi4usb3CheckDisabled"
+#set MEDIOLAFILENAME "/usr/local/addons/mediola/Disabled"
+set MEDIOLAFILENAME "/etc/config/neoDisabled"
+set CLOUDMATICFILENAME "/etc/config/cloudmaticDisabled"
+set NOUPDATEDCVARSFILENAME "/etc/config/NoUpdateDCVars"
+set NOBADBLOCKSCHECKFILENAME "/etc/config/NoBadBlocksCheck"
+set NOPORTFORWARDINGCHECKFILENAME "/etc/config/NoPortForwardingCheck"
+set NOFSTRIMFILENAME "/etc/config/NoFSTRIM"
+set NOADDONUPDATECHECKFILENAME "/etc/config/NoAddonUpdateCheck"
+set DISABLELEDFILENAME "/etc/config/disableLED"
+set DISABLEONBOARDLEDFILENAME "/etc/config/disableOnboardLED"
+set CUSTOMSTORAGEPATHFILENAME "/etc/config/CustomStoragePath"
+set HBRFETHIPADDRESSFILENAME "/etc/config/hb_rf_eth"
+
+set NOCRONBACKUPFILENAME "/etc/config/NoCronBackup"
+set CRONBACKUPMAXBACKUPSFILENAME "/etc/config/CronBackupMaxBackups"
+set CRONBACKUPPATHFILENAME "/etc/config/CronBackupPath"
+
+set TWEAKFILENAME "/etc/config/tweaks"
+
+proc get_systemname {} {
+  set isecmd "string systemname = system.Name();"
+  array set result [rega_script $isecmd]
+  if { $result(systemname) == "ReGaRA Demo" || $result(systemname) == "" } {
+    set res ""
+  } else {
+    set res $result(systemname)
+  }
+  return $res;
+}
+
+proc set_systemname { systemname } {
+  set isecmd "system.Name('$systemname');"
+  array set result [rega_script $isecmd]
+  return $result(STDOUT);
+}
+
+proc createfile { filename } {
+ set result ""
+
+ if {![file exists $filename]} {
+   catch {exec touch $filename} e
+
+   if {[string trim $e] != ""} {
+    set result "error createfile $filename \n"
+   }
+ }
+ return $result
+}
+
+proc deletefile { filename } {
+ set result ""
+ 
+ if {[file exists $filename]} {
+   catch {exec rm -f $filename} e
+
+   if {[string trim $e] != ""} {
+     set result "error deletefile $filename \n"
+   }
+ } 
+ return $result
+}
+
+proc read_var_from_file { filename varname } {
+  set var ""
+
+  set fd -1
+  catch { set fd [open $filename r] }
+  if { $fd >=0 } {
+      while { [gets $fd buf] >=0 } {
+        if [regexp "^ *$varname *= *(.*)$" $buf dummy var] break
+      }
+    close $fd
+  }
+
+  return $var
+}
+
+proc readfile { filename } {
+  set content ""
+  if { [file exists $filename] } {
+    set fd [open $filename r]
+    set content [read $fd]
+  }
+  return $content
+}
+
+proc writefile { filename content } { 
+  set fd -1
+  catch {set fd [open $filename w]}
+  if { $fd <0 } {return "$filename write error\n" }
+  
+  puts $fd $content
+  close $fd
+  return ""
+}
+
+proc put_message {title msg args} {
+  division {class="popupTitle"} {
+    puts $title
+  }
+  division {class="CLASS20900"} {
+    table {class="popupTable CLASS20916"} {border="1"} {
+      table_row {class="CLASS20917"} {
+        table_data {
+          puts $msg
+        }
+      }
+    }
+  }
+  division {class="popupControls"} {
+    table {
+      table_row {
+        if { [llength $args] < 1 } { set args {{"Zur&uuml;ck" "PopupClose();"}}}
+        if {"_empty_" == $args} { set args "" }
+        foreach b $args {
+          table_data {class="CLASS20907"} {
+            division {class="CLASS20908"} "onClick=\"[lindex $b 1]\"" {
+              puts [lindex $b 0]
+            }
+          }
+        }
+      }
+    }
+  }
+
+  cgi_javascript {
+    puts "translatePage('#messagebox');"
+  }
+}
+
+proc action_put_page {} {
+  global env sid INETCHECKFILENAME RPI4USB3CHECKFILENAME MEDIOLAFILENAME CLOUDMATICFILENAME NOCRONBACKUPFILENAME NOUPDATEDCVARSFILENAME NOBADBLOCKSCHECKFILENAME NOPORTFORWARDINGCHECKFILENAME NOFSTRIMFILENAME NOADDONUPDATECHECKFILENAME CRONBACKUPMAXBACKUPSFILENAME CRONBACKUPPATHFILENAME CUSTOMSTORAGEPATHFILENAME HBRFETHIPADDRESSFILENAME TWEAKFILENAME DISABLELEDFILENAME DISABLEONBOARDLEDFILENAME
+   
+  set inetcheckDisabled [file exists $INETCHECKFILENAME]
+  set rpi4usb3CheckDisabled [file exists $RPI4USB3CHECKFILENAME]
+  set mediolaDisabled [file exists $MEDIOLAFILENAME]
+  set cloudmaticDisabled [file exists $CLOUDMATICFILENAME]
+  set noCronBackup [file exists $NOCRONBACKUPFILENAME]
+  set noDCVars [file exists $NOUPDATEDCVARSFILENAME]
+  set noBadBlocksCheck [file exists $NOBADBLOCKSCHECKFILENAME]
+  set noPortforwardingCheck [file exists $NOPORTFORWARDINGCHECKFILENAME]
+  set noFSTRIM [file exists $NOFSTRIMFILENAME]
+  set noAddonUpdateCheck [file exists $NOADDONUPDATECHECKFILENAME]
+  set disableLED [file exists $DISABLELEDFILENAME]
+  set disableOnboardLED [file exists $DISABLEONBOARDLEDFILENAME]
+  
+  set cronBackupMaxBackups [readfile $CRONBACKUPMAXBACKUPSFILENAME]
+  set cronBackupPath [readfile $CRONBACKUPPATHFILENAME]
+  set customStoragePath [readfile $CUSTOMSTORAGEPATHFILENAME]
+  set hbrfethIPAddress [readfile $HBRFETHIPADDRESSFILENAME]
+
+  set tweaks [read_var_from_file $TWEAKFILENAME CP_DEVCONFIG]
+  set systemName [get_systemname]
+
+  http_head
+  
+  division {class="popupTitle"} {
+    puts "\${dialogSettingsAdvancedSettingsTitle}"
+  }
+  division {class="CLASS21114 j_translate"} {
+    division {style="height:75vh;width:100%;overflow:auto;"} {
+    table {class="popupTable"} {border=1} {width="100%"} {height="100%"} {
+      table_row {class="CLASS21115"} {
+        table_data {class="CLASS21116"} {
+          puts "\${dialogSettingsAdvancedSettingsWatchDog}"
+          puts "<br/><img src=\"/ise/img/help.png\" style=\"cursor: pointer; width:21px; height:21px; vertical-align:middle;\" onclick=\"OnToggleHelp();\">"
+        }
+        table_data {align=left} {class="CLASS02533"} {
+          table {
+            table_row {
+              set checked ""
+              if {!$inetcheckDisabled} { set checked "checked=true" }
+              table_data {class="CLASS21112"} {colspan="3"} {
+                cgi_checkbox mode=inetcheckDisabled {id="cb_inetcheckDisabled"} $checked
+                puts "\${dialogSettingsAdvancedSettingsInternetCheck}"
+              }
+            }
+            table_row {
+              set checked ""
+              if {!$rpi4usb3CheckDisabled} { set checked "checked=true" }
+              table_data {class="CLASS21112"} {colspan="3"} {
+                cgi_checkbox mode=rpi4usb3CheckDisabled {id="cb_rpi4usb3CheckDisabled"} $checked
+                puts "\${dialogSettingsAdvancedSettingsRpi4usb3Check}"
+              }
+            }
+          }
+        }
+        table_data {class="CLASS21113"} {align="left"} {
+          p { ${dialogSettingsAdvancedSettingsHintWatchDogCheck1} }
+          p { ${dialogSettingsAdvancedSettingsHintWatchDogCheck2} }
+        }
+      }
+      table_row {class="CLASS21115"} {
+        table_data {class="CLASS21116"} {
+          puts "\${dialogSettingsAdvancedSettingsSystem}"
+          puts "<br/><img src=\"/ise/img/help.png\" style=\"cursor: pointer; width:21px; height:21px; vertical-align:middle;\" onclick=\"OnToggleHelp();\">"
+        }
+        table_data {align=left} {class="CLASS02533"} {
+          table {
+            table_row { table_data {class="CLASS21112"} {colspan="3"} { puts "\<hr>" } }
+            table_row {
+              table_data {class="CLASS21112"} {
+                puts "\${dialogSettingsAdvancedSettingsSystemName}"
+              }
+              table_data  {
+                cgi_text systemName=$systemName {id="text_systemName"} {size=30}
+              }
+            }
+            table_row { table_data {class="CLASS21112"} {colspan="3"} { puts "\<hr>" } }
+            table_row {
+              set checked ""
+              if {!$noCronBackup} { set checked "checked=true" }
+              table_data {class="CLASS21112"} {colspan="3"} {
+                cgi_checkbox mode=noCronBackup {id="cb_noCronBackup"} $checked
+                puts "\${dialogSettingsAdvancedSettingsCronBackup}"
+              }
+            }
+            table_row {
+              table_data {class="CLASS21112"} {
+                puts "\${dialogSettingsAdvancedSettingsCronBackupPath}"
+              }
+
+              table_data  {
+                cgi_text cronBackupPath=$cronBackupPath {id="text_cronBackupPath"} {size=30}
+              }
+            }
+            table_row {
+              table_data {class="CLASS21112"} {
+                puts "\${dialogSettingsAdvancedSettingsCronBackupMaxBackups}"
+              }
+
+              table_data  {
+                cgi_text cronBackupMaxBackups=$cronBackupMaxBackups {id="text_cronBackupMaxBackups"} {size=5} {onpaste="validateNumber(this.value, this.id);"} {onkeyup="validateNumber(this.value, this.id);"}
+              }
+            }
+            table_row { table_data {class="CLASS21112"} {colspan="3"} { puts "\<hr>" } }
+            table_row {
+              set checked ""
+              if {!$noDCVars} { set checked "checked=true" }
+              table_data {class="CLASS21112"} {colspan="3"} {
+                cgi_checkbox mode=noDCVars {id="cb_noDCVars"} $checked
+                puts "\${dialogSettingsAdvancedSettingsDCVars}"
+              }
+            }
+            table_row { table_data {class="CLASS21112"} {colspan="3"} { puts "\<hr>" } }
+            table_row {
+              set checked ""
+              if {!$disableLED} { set checked "checked=true" }
+              table_data {class="CLASS21112"} {colspan="3"} {
+                cgi_checkbox mode=disableLED {id="cb_disableLED"} $checked
+                puts "\${dialogSettingsAdvancedSettingsDisableLED}"
+              }
+            }
+            table_row {
+              set checked ""
+              if {!$disableOnboardLED} { set checked "checked=true" }
+              table_data {class="CLASS21112"} {colspan="3"} {
+                cgi_checkbox mode=disableOnboardLED {id="cb_disableOnboardLED"} $checked
+                puts "\${dialogSettingsAdvancedSettingsDisableOnboardLED}"
+              }
+            }
+            table_row { table_data {class="CLASS21112"} {colspan="3"} { puts "\<hr>" } }
+            table_row {
+              set checked ""
+              if {!$noPortforwardingCheck} { set checked "checked=true" }
+              table_data {class="CLASS21112"} {colspan="3"} {
+                cgi_checkbox mode=noPortforwardingCheck {id="cb_noPortforwardingCheck"} $checked
+                puts "\${dialogSettingsAdvancedSettingsPortforwardingCheck}"
+              }
+            }
+            table_row {
+              set checked ""
+              if {!$noAddonUpdateCheck} { set checked "checked=true" }
+              table_data {class="CLASS21112"} {colspan="3"} {
+                cgi_checkbox mode=noAddonUpdateCheck {id="cb_noAddonUpdateCheck"} $checked
+                puts "\${dialogSettingsAdvancedSettingsAddonUpdateCheck}"
+              }
+            }
+            table_row { table_data {class="CLASS21112"} {colspan="3"} { puts "\<hr>" } }
+            table_row {
+              set checked ""
+              if {!$noBadBlocksCheck} { set checked "checked=true" }
+              table_data {class="CLASS21112"} {colspan="3"} {
+                cgi_checkbox mode=noBadBlocksCheck {id="cb_noBadBlocksCheck"} $checked
+                puts "\${dialogSettingsAdvancedSettingsBadBlocksCheck}"
+              }
+            }
+            table_row {
+              set checked ""
+              if {!$noFSTRIM} { set checked "checked=true" }
+              table_data {class="CLASS21112"} {colspan="3"} {
+                cgi_checkbox mode=noFSTRIM {id="cb_noFSTRIM"} $checked
+                puts "\${dialogSettingsAdvancedSettingsFSTRIM}"
+              }
+            }
+            table_row { table_data {class="CLASS21112"} {colspan="3"} { puts "\<hr>" } }
+            table_row {
+              table_data {class="CLASS21112"} {
+                puts "\${dialogSettingsAdvancedSettingsCustomStoragePath}"
+              }
+
+              table_data  {
+                cgi_text customStoragePath=$customStoragePath {id="text_customStoragePath"} {size=30}
+              }
+            }
+            table_row { table_data {class="CLASS21112"} {colspan="3"} { puts "\<hr>" } }
+            table_row {
+              set checked ""
+              if {!$mediolaDisabled} { set checked "checked=true" }
+              table_data {class="CLASS21112"} {colspan="3"} {
+                cgi_checkbox mode=mediolaDisabled {id="cb_mediolaDisabled"} $checked
+                puts "\${dialogSettingsAdvancedSettingsMediola}"
+              }
+            }
+            table_row {
+              set checked ""
+              if {!$cloudmaticDisabled} { set checked "checked=true" }
+              table_data {class="CLASS21112"} {colspan="3"} {
+                cgi_checkbox mode=cloudmaticDisabled {id="cb_cloudmaticDisabled"} $checked
+                puts "\${dialogSettingsAdvancedSettingsCloudmatic}"
+              }
+            }
+            table_row { table_data {class="CLASS21112"} {colspan="3"} { puts "\<hr>" } }
+            table_row {
+              table_data {class="CLASS21112"} {
+                puts "\${dialogSettingsAdvancedSettingHBRFETHIPAddress}"
+              }
+
+              table_data  {
+                cgi_text hbrfethIPAddress=$hbrfethIPAddress {id="text_hbrfethIPAddress"} {size=30}
+              }
+            }
+            table_row { table_data {class="CLASS21112"} {colspan="3"} { puts "\<hr>" } }
+          }
+        }
+        table_data {class="CLASS21113"} {align="left"} {
+          p { ${dialogSettingsAdvancedSettingsHintSystem11} }
+          p { ${dialogSettingsAdvancedSettingsHintSystem1} }
+          p { ${dialogSettingsAdvancedSettingsHintSystem2} }
+          p { ${dialogSettingsAdvancedSettingsHintSystem3} }
+          p { ${dialogSettingsAdvancedSettingsHintSystem4} }
+          p { ${dialogSettingsAdvancedSettingsHintSystem5} }
+          p { ${dialogSettingsAdvancedSettingsHintSystem6} }
+          p { ${dialogSettingsAdvancedSettingsHintSystem12} }
+          p { ${dialogSettingsAdvancedSettingsHintSystem13} }
+          p { ${dialogSettingsAdvancedSettingsHintSystem7} }
+          p { ${dialogSettingsAdvancedSettingsHintSystem8} }
+          p { ${dialogSettingsAdvancedSettingsHintSystem9} }
+          p { ${dialogSettingsAdvancedSettingsHintSystem10} }
+          p { ${dialogSettingsAdvancedSettingsHintSystem14} }
+          p { ${dialogSettingsAdvancedSettingsHintSystem15} }
+        }
+      }
+
+      table_row {class="CLASS21115"} {
+        table_data {class="CLASS21116"} {
+          puts "\${dialogSettingsAdvancedSettingsExpert}"
+          puts "<br/><img src=\"/ise/img/help.png\" style=\"cursor: pointer; width:21px; height:21px; vertical-align:middle;\" onclick=\"OnToggleHelp();\">"
+        }
+        table_data {align=left} {class="CLASS02533"} {
+          table {
+            table_row {
+              set checked ""
+              if {$tweaks == ""} { set checked "checked=true" }
+              table_data {class="CLASS21112"} {colspan="3"} {
+                cgi_checkbox mode=devConfig {id="cb_devConfig"} $checked
+                puts "\${dialogSettingsAdvancedSettingsDevConfig}"
+              }
+            }
+
+          }
+        }
+        table_data {class="CLASS21113"} {align="left"} {
+          p { ${dialogSettingsAdvancedSettingsHintExpert1} }
+        }
+      }
+    }
+    }
+  }
+  division {class="popupControls"} {
+    table {
+      table_row {
+        table_data {class="CLASS21103"} {
+          division {class="CLASS21108"} {onClick="PopupClose()"} {
+            #puts "Abbrechen"
+            puts "\${btnCancel}"
+          }
+        }
+        table_data {class="CLASS21103"} {
+          division {id="btnOK"} {class="CLASS21108"} {onClick="OnOK()"} {
+            #puts "OK"
+            puts "\${btnOk}"
+          }
+        }
+        table_data {class="CLASS21109"} {align=right} {
+          division {class="CLASS21108"} {onClick="OnToggleHelp()"} {
+            puts "\${tooltipHelp}&nbsp;<img src=\"/ise/img/help.png\" style=\"cursor: pointer; width:21px; height:21px; vertical-align:middle;\" >"
+          }
+        }
+      }
+    }
+  }
+
+  cgi_javascript {
+    puts "var url = \"$env(SCRIPT_NAME)?sid=\" + SessionId;"
+    puts {
+      dlgResult = 0;
+      isHelpVisible = false;
+      showHelp = function(enable) {
+        isHelpVisible=enable;
+        var infos = document.getElementsByClassName("CLASS21113");
+        if (infos !== null) {
+          for (const info of infos) { info.style.display = enable ? "block" : "none"; }
+          dlgPopup.setWidth(enable ? 1020 : 600);
+          dlgPopup.readaptSize();
+        }
+      }
+      
+      OnToggleHelp = function() {
+        isHelpVisible = !isHelpVisible;
+		showHelp(isHelpVisible);
+      }
+      
+      OnOK = function() {
+        var pb = "action=save_settings";
+        pb += "&inetcheckDisabled="+(document.getElementById("cb_inetcheckDisabled").checked?"0":"1");
+        pb += "&rpi4usb3CheckDisabled="+(document.getElementById("cb_rpi4usb3CheckDisabled").checked?"0":"1");
+        pb += "&mediolaDisabled="+(document.getElementById("cb_mediolaDisabled").checked?"0":"1");
+        pb += "&cloudmaticDisabled="+(document.getElementById("cb_cloudmaticDisabled").checked?"0":"1");
+        pb += "&noCronBackup="+(document.getElementById("cb_noCronBackup").checked?"0":"1");
+        pb += "&noDCVars="+(document.getElementById("cb_noDCVars").checked?"0":"1");
+        pb += "&noBadBlocksCheck="+(document.getElementById("cb_noBadBlocksCheck").checked?"0":"1");
+        pb += "&noPortforwardingCheck="+(document.getElementById("cb_noPortforwardingCheck").checked?"0":"1");
+        pb += "&disableLED="+(document.getElementById("cb_disableLED").checked?"0":"1");
+        pb += "&disableOnboardLED="+(document.getElementById("cb_disableOnboardLED").checked?"0":"1");
+        pb += "&noFSTRIM="+(document.getElementById("cb_noFSTRIM").checked?"0":"1");
+        pb += "&noAddonUpdateCheck="+(document.getElementById("cb_noAddonUpdateCheck").checked?"0":"1");
+        pb += "&devConfig="+(document.getElementById("cb_devConfig").checked?"0":"1");
+        pb += "&cronBackupPath="+encodeURIComponent(document.getElementById("text_cronBackupPath").value);
+        pb += "&cronBackupMaxBackups="+encodeURIComponent(document.getElementById("text_cronBackupMaxBackups").value);
+        pb += "&customStoragePath="+encodeURIComponent(document.getElementById("text_customStoragePath").value);
+        pb += "&hbrfethIPAddress="+encodeURIComponent(document.getElementById("text_hbrfethIPAddress").value);
+        pb += "&systemName="+escape(document.getElementById("text_systemName").value);
+
+        var opts = {
+          postBody: pb,
+          sendXML: false,
+          onSuccess: function(transport) {
+            if (transport.responseText === "") {   
+              dlgPopup.hide();
+              dlgPopup.setWidth(400);
+              PopupClose();
+            } else { 
+              alert(translateKey("dialogSettingsAdvancedSettingsMessageAlertMessageError1") + "\n" +transport.responseText); 
+            }
+          }
+        };
+        new Ajax.Request(url, opts);
+      }      
+    }
+    
+    puts {
+      translatePlaceholder = function() {
+        document.getElementById("text_customStoragePath").placeholder=translateKey("dialogSettingsAdvancedSettingsCustomStoragePathPlaceholder");
+        document.getElementById("text_hbrfethIPAddress").placeholder=translateKey("dialogSettingsAdvancedSettingHBRFETHIPAddressPlaceholder");
+        document.getElementById("text_cronBackupPath").placeholder=translateKey("dialogSettingsAdvancedSettingsCronBackupPathPlaceholder");
+        document.getElementById("text_cronBackupMaxBackups").placeholder="30";
+        document.getElementById("text_systemName").placeholder=translateKey("dialogSettingsAdvancedSettingsSystemNamePlaceholder");
+      };
+    }
+    
+    puts {
+      validateNumber = function(num, elmId) {
+        var validator = /^(\s*|\d+)$/;
+        var isValid = num.match(validator);
+        btnOKElm = jQuery("#btnOK"),
+        inputElm = jQuery("#"+elmId);
+
+        if (isValid != null) {
+         inputElm.css('background-color', '');
+         btnOKElm.show();
+        } else {
+         inputElm.css('background-color', 'red');
+         btnOKElm.hide();
+        }
+      };
+    }
+
+    puts "translatePlaceholder();"
+    puts "translatePage('#messagebox');"
+    puts "showHelp(false);"
+  }
+  
+}
+
+proc action_save_settings {} {
+  global INETCHECKFILENAME RPI4USB3CHECKFILENAME MEDIOLAFILENAME CLOUDMATICFILENAME NOCRONBACKUPFILENAME NOUPDATEDCVARSFILENAME NOBADBLOCKSCHECKFILENAME NOPORTFORWARDINGCHECKFILENAME NOFSTRIMFILENAME NOADDONUPDATECHECKFILENAME CRONBACKUPMAXBACKUPSFILENAME CRONBACKUPPATHFILENAME CUSTOMSTORAGEPATHFILENAME HBRFETHIPADDRESSFILENAME TWEAKFILENAME DISABLELEDFILENAME DISABLEONBOARDLEDFILENAME
+  set errMsg ""
+
+  import inetcheckDisabled
+  import rpi4usb3CheckDisabled
+  import mediolaDisabled
+  import cloudmaticDisabled
+  import noCronBackup
+  import noDCVars
+  import disableLED
+  import disableOnboardLED
+  import noBadBlocksCheck
+  import noPortforwardingCheck
+  import noFSTRIM
+  import noAddonUpdateCheck
+  import devConfig
+  import cronBackupPath
+  import cronBackupMaxBackups
+  import customStoragePath
+  import hbrfethIPAddress
+  import systemName
+  
+  if {$systemName == ""} {
+    append errMsg [set_systemname "ReGaRA Demo"]
+  } else {
+    append errMsg [set_systemname $systemName]
+  }
+  
+  if {$inetcheckDisabled} {
+    append errMsg [createfile $INETCHECKFILENAME]
+  } else {
+    append errMsg [deletefile $INETCHECKFILENAME]
+  }
+  
+  if {$rpi4usb3CheckDisabled} {
+    append errMsg [createfile $RPI4USB3CHECKFILENAME]
+  } else {
+    append errMsg [deletefile $RPI4USB3CHECKFILENAME]
+  }
+
+  set mediolaDisabledCurrent [file exists $MEDIOLAFILENAME]
+  if {$mediolaDisabled} {
+    append errMsg [createfile $MEDIOLAFILENAME]
+  } else {
+    append errMsg [deletefile $MEDIOLAFILENAME]
+  }
+  if {$mediolaDisabled != $mediolaDisabledCurrent} {
+    catch {exec /etc/init.d/S97NeoServer restart 2>/dev/null >/dev/null}
+  }
+  
+  set cloudmaticDisabledCurrent [file exists $CLOUDMATICFILENAME]
+  if {$cloudmaticDisabled} {
+    append errMsg [createfile $CLOUDMATICFILENAME]
+  } else {
+    append errMsg [deletefile $CLOUDMATICFILENAME]
+  }
+  if {$cloudmaticDisabled != $cloudmaticDisabledCurrent} {
+    catch {exec /etc/init.d/S97CloudMatic restart 2>/dev/null >/dev/null}
+  }
+
+  if {$noCronBackup} {
+    append errMsg [createfile $NOCRONBACKUPFILENAME]
+  } else {
+    append errMsg [deletefile $NOCRONBACKUPFILENAME]
+  }
+  
+  if {$noDCVars} {
+    append errMsg [createfile $NOUPDATEDCVARSFILENAME]
+  } else {
+    append errMsg [deletefile $NOUPDATEDCVARSFILENAME]
+  }
+  
+  if {$disableLED} {
+    append errMsg [createfile $DISABLELEDFILENAME]
+  } else {
+    append errMsg [deletefile $DISABLELEDFILENAME]
+  }  
+
+  if {$disableOnboardLED} {
+    append errMsg [createfile $DISABLEONBOARDLEDFILENAME]
+  } else {
+    append errMsg [deletefile $DISABLEONBOARDLEDFILENAME]
+  }  
+  
+  if {$noBadBlocksCheck} {
+    append errMsg [createfile $NOBADBLOCKSCHECKFILENAME]
+  } else {
+    append errMsg [deletefile $NOBADBLOCKSCHECKFILENAME]
+  }
+  
+  if {$noPortforwardingCheck} {
+    append errMsg [createfile $NOPORTFORWARDINGCHECKFILENAME]
+  } else {
+    append errMsg [deletefile $NOPORTFORWARDINGCHECKFILENAME]
+  }
+
+  if {$noFSTRIM} {
+    append errMsg [createfile $NOFSTRIMFILENAME]
+  } else {
+    append errMsg [deletefile $NOFSTRIMFILENAME]
+  }
+
+  if {$noAddonUpdateCheck} {
+    append errMsg [createfile $NOADDONUPDATECHECKFILENAME]
+  } else {
+    append errMsg [deletefile $NOADDONUPDATECHECKFILENAME]
+  }
+
+  if {$devConfig} {
+    append errMsg [writefile $TWEAKFILENAME "CP_DEVCONFIG=1"]
+  } else {
+    append errMsg [deletefile $TWEAKFILENAME]
+  }
+  
+  if { $cronBackupMaxBackups == "" } {
+    append errMsg [deletefile $CRONBACKUPMAXBACKUPSFILENAME]
+  } else {
+    append errMsg [writefile $CRONBACKUPMAXBACKUPSFILENAME $cronBackupMaxBackups]
+  }
+  
+  if { $cronBackupPath == "" } {
+    append errMsg [deletefile $CRONBACKUPPATHFILENAME]
+  } else {
+    append errMsg [writefile $CRONBACKUPPATHFILENAME $cronBackupPath]
+  }
+  
+  if { $customStoragePath == "" } {
+    append errMsg [deletefile $CUSTOMSTORAGEPATHFILENAME]
+  } else {
+    append errMsg [writefile $CUSTOMSTORAGEPATHFILENAME $customStoragePath]
+  }
+
+  if { $hbrfethIPAddress == "" } {
+    append errMsg [deletefile $HBRFETHIPADDRESSFILENAME]
+  } else {
+    append errMsg [writefile $HBRFETHIPADDRESSFILENAME $hbrfethIPAddress]
+  }
+  
+  # reload monit
+  catch { exec /usr/bin/monit reload }
+
+  puts "$errMsg"
+}
+
+cgi_eval {
+  cgi_input
+  set action "put_page"
+  catch { import action }
+  if {[session_requestisvalid 8] > 0} then action_$action
+}
--- occu/WebUI/www/rega/login.htm.orig
+++ occu/WebUI/www/rega/login.htm
@@ -2,7 +2,7 @@
 
 <html lang="de">
   <head>
-    <title>HomeMatic WebUI</title>
+    <title><% if ((system.Name() == 'ReGaRA Demo') || (system.Name() == '')) { Write('OpenCCU WebUI'); } else { Write(system.Name()); } %></title>
 
     <link rel="shortcut icon" href="/ise/img/rm-favicon.ico" type="image/vnd.microsoft.icon"/>
     <link rel="icon"          href="/ise/img/rm-favicon.ico" type="image/vnd.microsoft.icon" />
--- occu/WebUI/www/rega/logout.htm.orig
+++ occu/WebUI/www/rega/logout.htm
@@ -1,7 +1,7 @@
 <!DOCTYPE html>
 <html lang="de">
   <head>
-    <title>HomeMatic WebUI</title>
+    <title><% if ((system.Name() == 'ReGaRA Demo') || (system.Name() == '')) { Write('OpenCCU WebUI'); } else { Write(system.Name()); } %></title>
 
     <link rel="shortcut icon" href="/ise/img/rm-favicon.ico" type="image/vnd.microsoft.icon"/>
     <link rel="icon"          href="/ise/img/rm-favicon.ico" type="image/vnd.microsoft.icon" />
--- occu/WebUI/www/rega/pages/index.htm.orig
+++ occu/WebUI/www/rega/pages/index.htm
@@ -26,7 +26,7 @@
     <link rel="icon" type="image/png" sizes="16x16" href="/ise/img/rm-favicon-16x16.png">
     <link rel="manifest" href="/webui/site.webmanifest">
 
-    <title>HomeMatic WebUI</title>
+    <title><% if ((system.Name() == 'ReGaRA Demo') || (system.Name() == '')) { Write('OpenCCU WebUI'); } else { Write(system.Name()); } %></title>
 
 
     <script type="text/javascript" src="/webui/js/extern/jquery.js"></script>
--- occu/WebUI/www/webui/js/lang/de/translate.lang.js.orig
+++ occu/WebUI/www/webui/js/lang/de/translate.lang.js
@@ -468,6 +468,8 @@
     "lblMenuStatusControlSysProtocolTime" : "Zeit",
     "lblMenuStatusControlSysProtocolChannelSysvar" : "Kanal / Systemvariable",
     "lblMenuStatusControlSysProtocolActivity" : "Aktivit%E4t",
+    "btnSysConfAdvancedSettings" : "Erweiterte<br/>Einstellungen",
+    "lblSysConfAdvancedSettings1" : "WatchDog-, (Betrieb-)System- und Expertenoptionen",
     "btnSysConfCentralMaintenace" : "Zentralen-<br/>Wartung",
     "lblSysConfCentralMaintenance1" : "Software-Update der " + HMIdentifier.de.CCUFullNameText,
     "lblSysConfCentralMaintenance2" : HMIdentifier.de.CCUFullNameText + " neu starten",
@@ -630,6 +632,53 @@
     "dialogSettingsCentralDisplayLblOptionHours" : "Stunden",
     "dialogSettingsCentralDisplayLblOptionAlways" : "Immer an",
     "commentSettingsDialogCentralDisplayEnd" : "***********************************************",
+    "commentSettingsDialogAdvancedSettings" : "***********************************************",
+    "dialogSettingsAdvancedSettingsTitle" : HMIdentifier.de.CCUShortName + " - Erweiterte Einstellungen",
+    "dialogSettingsAdvancedSettingsWatchDog" : "WatchDog-Optionen",
+    "dialogSettingsAdvancedSettingsInternetCheck" : "Internet %DCberwachung",
+    "dialogSettingsAdvancedSettingsRpi4usb3Check" : "USB3 %DCberpr%FCfung (RaspberryPi4)",
+    "dialogSettingsAdvancedSettingsHintWatchDogCheck1" : "<b>Internet %DCberwachung:</b><br/>Die Internetverbindung wird in regelm%E4%DFigen Abst%E4nden kontrolliert und bei Ausfall eine WebUI Alarmmeldung erzeugt.",
+    "dialogSettingsAdvancedSettingsHintWatchDogCheck2" : "<b>USB3 %DCberpr%FCfung (RaspberryPi4):</b><br/>Bei Nutzung eines RaspberryPi4 wird eine WebUI Alarmmeldung erzeugt, wenn dort ein USB3 Anschluss (Blau) gleichzeitig mit einem Funkmodul auf dem GPIO Bus genutzt wird. Diese Nutzungskombination ist daf%FCr bekannt, das hierbei starke Funkst%F6rungen auftreten die die Kommunikation mit HomeMatic/homematicIP Ger%E4ten negativ beeintr%E4chtigt.",
+    "dialogSettingsAdvancedSettingsSystem" : "System-Optionen",
+    "dialogSettingsAdvancedSettingsMediola" : "Mediola NEO-Server Autostart",
+    "dialogSettingsAdvancedSettingsCloudmatic" : "CloudMatic Autostart",
+    "dialogSettingsAdvancedSettingsCronBackup" : "Automatische Backups",
+    "dialogSettingsAdvancedSettingsCronBackupPath" : "Backup-Speicherpfad",
+    "dialogSettingsAdvancedSettingsCronBackupPathPlaceholder" : "<Systemvorgabe>",
+    "dialogSettingsAdvancedSettingsCronBackupMaxBackups" : "Backup-Anzahl (max.)",
+    "dialogSettingsAdvancedSettingsCustomStoragePath" : "Alternativer Speicherpfad",
+    "dialogSettingsAdvancedSettingsCustomStoragePathPlaceholder" : "<Systemvorgabe>",
+    "dialogSettingsAdvancedSettingsDCVars" : "Duty-Cycle Systemvariablen",
+    "dialogSettingsAdvancedSettingsDisableLED" : "LED-Nutzung (Funkmodul)",
+    "dialogSettingsAdvancedSettingsDisableOnboardLED" : "LED-Nutzung (Onboard)",
+    "dialogSettingsAdvancedSettingsBadBlocksCheck" : "Speicher%FCberpr%FCfung (Bad-Blocks)",
+    "dialogSettingsAdvancedSettingsFSTRIM" : "Speicher%FCberpr%FCfung (FSTRIM)",
+    "dialogSettingsAdvancedSettingsPortforwardingCheck" : "Sicherheits%FCberpr%FCfung (Port-Forwarding)",
+    "dialogSettingsAdvancedSettingsAddonUpdateCheck" : "Pr%FCfung auf aktualisierte Zusatzsoftware (CCU-Addons)",
+    "dialogSettingsAdvancedSettingsHintSystem1" : "<b>Automatische Backups:</b><br/>Automatische Generierung von Backups (jede Nacht um 00:07).",
+    "dialogSettingsAdvancedSettingsHintSystem2" : "<b>Backup-Speicherpfad:</b><br/>Speicherpfad zur Ablage der automatischen Backups (*.sbk). Systemvorgabe: angeschlossenes USB-Medium (bei Nutzung einer SD-Karte als zentrales Speichermedium).",
+    "dialogSettingsAdvancedSettingsHintSystem3" : "<b>Backup-Anzahl (max.):</b><br/>Maximale Anzahl der im Speicherpfad aufzubewahrenden Backupdateien (Systemvorgabe: 30). Bei Eingabe von 0 findet keinerlei L%F6schung alter Backupdaten statt.",
+    "dialogSettingsAdvancedSettingsHintSystem4" : "<b>Duty-Cycle Systemvariablen:</b><br/>Es werden automatisch Systemvariablen mit den DutyCycle-Werten aller genutzen Funk-Interfaces angelegt und regelm%E4%DFig aktualisiert.",
+    "dialogSettingsAdvancedSettingsHintSystem5" : "<b>LED-Nutzung (Funkmodul):</b><br/>Bei Einsatz eines RPI-RF-MOD/HmIP-CCU3 Funkmodules oder eines HM-LGW-O-TW-W-EU wird die LED zur Statusanzeige von Alarm- und Servicemeldungen genutzt.",
+    "dialogSettingsAdvancedSettingsHintSystem6" : "<b>LED-Nutzung (Onboard):</b><br/>Bei Existenz von LEDs des genutzten Systemboards (z.B. RaspberryPi, CCU3) werden diese LEDs zur Darstellung des aktuellen Systemstatus verwendet.",
+    "dialogSettingsAdvancedSettingsHintSystem7" : "<b>Speicher%FCberpr%FCfung (Bad-Blocks):</b><br/>Zur %DCberpr%FCfung des Gesundheitsstatus des eingesetzten Systemspeichers wird jede Nacht um 01:59 ein sogn. 'Bad-Blocks' Check durchgef%FChrt und bei Auftreten eines Fehlers eine WebUI Alarmmeldung erzeugt.",
+    "dialogSettingsAdvancedSettingsHintSystem8" : "<b>Speicher%FCberpr%FCfung (FSTRIM):</b><br/>Wenn aktiviert wird jeden Samstag um 04:00 Uhr auf allen unterst%FCtzten Speichermedien (z.B. SSD) eventl. ungenutze Speicherbl%F6cke freigegeben.",
+    "dialogSettingsAdvancedSettingsHintSystem9" : "<b>Alternativer Speicherpfad:</b><br/>F%FCr die Speicherung von gr%F6%DFeren Datenmengen (z.B. Diagramm Daten, Add-on Datenablage, etc.) kann hier als Alternative zur Systemvorgabe (z.B. auf einem angeschlossenem USB-Medium) ein eigener Speicherpfad angegeben werden (ben%F6tigt Neustart).",
+    "dialogSettingsAdvancedSettingsHintSystem10" : "<b>Mediola NEO-Server Autostart:</b><br/>Bei Hochfahren der Zentrale wird automatisch der Mediola NEO Server gestartet, wenn dieser in seiner Konfiguration aktiviert wurde.",
+    "dialogSettingsAdvancedSettingsHintSystem11" : "<b>Systemname:</b><br/>Legt einen Namen f%FCr dieses System fest, der in der Titelleiste des Browsers, Browser-Tabs sowie auf der Startseite angezeigt wird.",
+    "dialogSettingsAdvancedSettingsHintSystem12" : "<b>Sicherheits%FCberpr%FCfung (Port-Forwarding):</b><br/>Um einen sicherheitskritischen Zugriff vom Internet aus via Port-Forwarding/Weiterleitung auszuschlie%DFen, wird jeden Sonntag um 04:00 Uhr nachts eine %DCberpr%FCfung der Internetverbindung durchgef%FChrt und ggf. bei erkanntem Port-Forwarding eine Alarmmeldung ausgegeben.",
+    "dialogSettingsAdvancedSettingsHintSystem13" : "<b>Pr%FCfung auf aktualisierte Zusatzsoftware:</b><br/>Pr%FCft 1x t%E4glich online auf neue verf%FCgbare Versionen installierter Zusatzsoftware (CCU-Addons) und zeigt diese auf der Startseite an.",
+    "dialogSettingsAdvancedSettingsHintSystem14" : "<b>CloudMatic Autostart:</b><br/>Bei Hochfahren der Zentrale wird automatisch der CloudMatic Dienst eingerichtet und gestartet, wenn dies hier aktiviert wurde.",
+    "dialogSettingsAdvancedSettingsHintSystem15" : "<b>IP-Adresse (HB-RF-ETH):</b><br/>Falls ein <a href='https://github.com/alexreinert/HB-RF-ETH'>HB-RF-ETH Funkmoduladapter</a> zum Einsatz kommt kann hier die IP-Adresse eingetragen werden unter der dieser Adapter erreichbar ist (ben%F6tigt Neustart).",
+    "dialogSettingsAdvancedSettingsExpert" : "Experten-Optionen",
+    "dialogSettingsAdvancedSettingsDevConfig" : "DevConfig-Button verbergen",
+    "dialogSettingsAdvancedSettingsHintExpert1" : "<b>DevConfig-Button verbergen:</b><br/>Wenn aktiviert wird der 'DevConfig' Button unter Systemsteuerung <i>nicht</i> angezeigt.",
+    "dialogSettingsAdvancedSettingsMessageAlertMessageError1" : "Fehler beim Speichern",
+    "dialogSettingsAdvancedSettingsSystemName" : "Systemname",
+    "dialogSettingsAdvancedSettingsSystemNamePlaceholder" : "<Systemvorgabe>",
+    "dialogSettingsAdvancedSettingHBRFETHIPAddress" : "IP-Adresse (HB-RF-ETH)",
+    "dialogSettingsAdvancedSettingHBRFETHIPAddressPlaceholder" : "<Deaktiviert>",
+    "commentSettingsDialogAdvancedSettingsEnd" : "***********************************************",
     "commentSettingsDialogNetwork" : "***********************************************",
     "dialogSettingsNetworkTitle" : HMIdentifier.de.CCUShortName + " - Netzwerkeinstellungen",
     "dialogSettingsNetworkTDIPSettings" : "IP-Einstellungen",
@@ -786,7 +835,7 @@
     "actionStatusControlLblNotActive" : "nicht aktiv",
     "actionStatusControlLblStart" : "Ausf%FChren",
     "actionStatusControlLblStartThenOnly" : "Ausf%FChren<br/>(nur 1. DANN)",
-    "actionStatusControlLblStartHelp" : "<b>Ausf%FChren:</b><br/><br/>Führt das Programm inkl. aller Bedingungspr%FCfungen aus. Es werden die Aktionen des &quot;DANN&quot; Teiles des Programmes ausgef%FChrt dessen Bedingungsblock &quot;WAHR&quot; ergibt. Andernfalls werden die Aktionen des &quot;SONST&quot; Teiles ausgef%FChrt.<br/><br/><b>Ausf%FChren (nur 1. DANN):</b><br/><br/>F%FChrt lediglich die Aktionen innerhalb des ersten &quot;DANN&quot; Teiles des Programmes - ohne jegliche Bedingungspr%FCfungen - aus.",
+    "actionStatusControlLblStartHelp" : "<b>Ausf%FChren:</b><br/><br/>F%FChrt das Programm inkl. aller Bedingungspr%FCfungen aus. Es werden die Aktionen des &quot;DANN&quot; Teiles des Programmes ausgef%FChrt dessen Bedingungsblock &quot;WAHR&quot; ergibt. Andernfalls werden die Aktionen des &quot;SONST&quot; Teiles ausgef%FChrt.<br/><br/><b>Ausf%FChren (nur 1. DANN):</b><br/><br/>F%FChrt lediglich die Aktionen innerhalb des ersten &quot;DANN&quot; Teiles des Programmes - ohne jegliche Bedingungspr%FCfungen - aus.",
     "actionStatusControlLblOn" : "Ein",
     "actionStatusControlLblOff" : "Aus",
     "actionStatusControlLblShortKeyPress" : "Kurzer<br/>Tastendruck",
--- occu/WebUI/www/webui/js/lang/en/translate.lang.js.orig
+++ occu/WebUI/www/webui/js/lang/en/translate.lang.js
@@ -467,6 +467,8 @@
     "lblMenuStatusControlSysProtocolTime" : "Time",
     "lblMenuStatusControlSysProtocolChannelSysvar" : "Channel / system variable",
     "lblMenuStatusControlSysProtocolActivity" : "Activity",
+    "btnSysConfAdvancedSettings" : "Advanced settings",
+    "lblSysConfAdvancedSettings1" : "watchdog settings, common (operating) system features and expert options",
     "btnSysConfCentralMaintenace" : "CCU maintenance",
     "lblSysConfCentralMaintenance1" : "Software update for " + HMIdentifier.en.CCUFullNameText,
     "lblSysConfCentralMaintenance2" : "Restart " + HMIdentifier.en.CCUFullNameText,
@@ -630,6 +632,53 @@
     "dialogSettingsCentralDisplayLblOptionHours" : "Hours",
     "dialogSettingsCentralDisplayLblOptionAlways" : "Always on",
     "commentSettingsDialogCentralDisplayEnd" : "***********************************************",
+    "commentSettingsDialogAdvancedSettings" : "***********************************************",
+    "dialogSettingsAdvancedSettingsTitle" : HMIdentifier.de.CCUShortName + " - Advanced settings",
+    "dialogSettingsAdvancedSettingsWatchDog" : "WatchDog Options",
+    "dialogSettingsAdvancedSettingsInternetCheck" : "Internet Monitoring",
+    "dialogSettingsAdvancedSettingsRpi4usb3Check" : "USB3 Monitoring (RaspberryPi4)",
+    "dialogSettingsAdvancedSettingsHintWatchDogCheck1" : "<b>Internet Monitoring:</b><br/>The internet connection will be regularly monitored and a WebUI alarm raised if an interruption is identified.",
+    "dialogSettingsAdvancedSettingsHintWatchDogCheck2" : "<b>USB3 Monitoring (RaspberryPi4):</b><br/>A WebUI alarm will be raised if the system board is a RaspberryPi4 and a USB3 port (blue) is used together with a rf module connected to the GPIO bus. This combination is known to produce severe rf interferences which negatively affects communication with HomeMatic/homematicIP devices.",
+    "dialogSettingsAdvancedSettingsSystem" : "System Options",
+    "dialogSettingsAdvancedSettingsMediola" : "Mediola NEO-Server Autostartup",
+    "dialogSettingsAdvancedSettingsCloudmatic" : "CloudMatic Autostartup",
+    "dialogSettingsAdvancedSettingsCronBackup" : "Auto Backups",
+    "dialogSettingsAdvancedSettingsCronBackupPath" : "Backup Storage Path",
+    "dialogSettingsAdvancedSettingsCronBackupPathPlaceholder" : "<default>",
+    "dialogSettingsAdvancedSettingsCronBackupMaxBackups" : "Backup Quantity (max.)",
+    "dialogSettingsAdvancedSettingsCustomStoragePath" : "Custom Storage Path",
+    "dialogSettingsAdvancedSettingsCustomStoragePathPlaceholder" : "<default>",
+    "dialogSettingsAdvancedSettingsDCVars" : "Duty-Cycle system variables",
+    "dialogSettingsAdvancedSettingsDisableLED" : "LED use (RF module)",
+    "dialogSettingsAdvancedSettingsDisableOnboardLED" : "LED use (Onboard)",
+    "dialogSettingsAdvancedSettingsBadBlocksCheck" : "Storage check (Bad Blocks)",
+    "dialogSettingsAdvancedSettingsFSTRIM" : "Storage check (FSTRIM)",
+    "dialogSettingsAdvancedSettingsPortforwardingCheck" : "Security check (Portforwarding)",
+    "dialogSettingsAdvancedSettingsAddonUpdateCheck" : "Check for additional software updates (ccu-addons)",
+    "dialogSettingsAdvancedSettingsHintSystem1" : "<b>Auto Backups:</b><br/>Creates automatic daily backups (at 00:07 am).",
+    "dialogSettingsAdvancedSettingsHintSystem2" : "<b>Backup Storage Path:</b><br/>Storage location where automatic backups files (*.sbk) are stored. Default: connected USB media (when using a SD card as the central storage).",
+    "dialogSettingsAdvancedSettingsHintSystem3" : "<b>Backup Quantity (max.):</b><br/>Maximum number of backups to retain until older ones are purged (default: 30). Use 0 to disable automatic purge, keeping all backup data files.",
+    "dialogSettingsAdvancedSettingsHintSystem4" : "<b>Duty-Cycle system variables:</b><br/>System variables containing the duty cycle value for each rf interface are generated and updated periodically.",
+    "dialogSettingsAdvancedSettingsHintSystem5" : "<b>LED use (RF module):</b><br/>In case of using a RPI-RF-MOD/HmIP-CCU3 rf module or a HM-LGW-O-TW-W-EU the LED will be used to display alarm- oder service messages status.",
+    "dialogSettingsAdvancedSettingsHintSystem6" : "<b>LED use (Onboard):</b><br/>If the used system board (e.g. RaspberryPi, CCU3) comes with onboard LEDs they will be used to reflect the current system status.",
+    "dialogSettingsAdvancedSettingsHintSystem7" : "<b>Storage check (Bad Blocks):</b><br/>For checking the health status of the used system storage a check will be peformed each night at 01:59 am and in case bad blocks are found a WebUI alarm will be raised.",
+    "dialogSettingsAdvancedSettingsHintSystem8" : "<b>Storage check (FSTRIM):</b><br/>If activated, unused filesystem data will be freed each saturday at 04:00 am on supported system drives (e.g. SSD).",
+    "dialogSettingsAdvancedSettingsHintSystem9" : "<b>Custom Storage Path:</b><br/>As an alternative to the default of storing larger data to e.g. a connected USB drive, an own directory path can be entered here (requires reboot).",
+    "dialogSettingsAdvancedSettingsHintSystem10" : "<b>Mediola NEO-Server Autostartup:</b><br/>Upon startup of the CCU, the Mediola NEO server process will be automatically started if it has been activated in the configuration.",
+    "dialogSettingsAdvancedSettingsHintSystem11" : "<b>System name:</b><br/>Defines a custom name for this system that shows up in the browser title bar, tab and start page.",
+    "dialogSettingsAdvancedSettingsHintSystem12" : "<b>Security check (Portforwarding):</b><br/>To ensure, that no security critical portforwarding is enabled in the internet connectivity used, a regular check will be performed each sunday at 04:00 am. In case a critical portforwarding is identified an alarm message will be raised accordingly.",
+    "dialogSettingsAdvancedSettingsHintSystem13" : "<b>Check for additional software updates:</b><br/>Checks for new versions of additional software (ccu-addons) once a day and shows it on the startpage.",
+    "dialogSettingsAdvancedSettingsHintSystem14" : "<b>CloudMatic Autostartup:</b><br/>Upon startup of the CCU, the CloudMatic service will be automatically initialized and started if this is activated here.",
+    "dialogSettingsAdvancedSettingsHintSystem15" : "<b>IP address (HB-RF-ETH):</b><br/>If available the IP address of a <a href='https://github.com/alexreinert/HB-RF-ETH'>HB-RF-ETH adapter</a> can be configued here (requires reboot).",
+    "dialogSettingsAdvancedSettingsExpert" : "Expert Options",
+    "dialogSettingsAdvancedSettingsDevConfig" : "Hide DevConfig-Button",
+    "dialogSettingsAdvancedSettingsHintExpert1" : "<b>Hide DevConfig-Button:</b><br/>If activated, the 'DevConfig' button will be <i>hided</i> under the control panel.",
+    "dialogSettingsAdvancedSettingsMessageAlertMessageError1" : "Error on save",
+    "dialogSettingsAdvancedSettingsSystemName" : "System name",
+    "dialogSettingsAdvancedSettingsSystemNamePlaceholder" : "<default>",
+    "dialogSettingsAdvancedSettingHBRFETHIPAddress" : "IP address (HB-RF-ETH)",
+    "dialogSettingsAdvancedSettingHBRFETHIPAddressPlaceholder" : "<disabled>",
+    "commentSettingsDialogAdvancedSettingsEnd" : "***********************************************",
     "commentSettingsDialogNetwork" : "***********************************************",
     "dialogSettingsNetworkTitle" : HMIdentifier.en.CCUShortName + " network settings",
     "dialogSettingsNetworkTDIPSettings" : "IP settings",
--- occu/WebUI/www/webui/webui.js.orig
+++ occu/WebUI/www/webui/webui.js
@@ -33311,15 +33311,25 @@
 };
 
 setPath = function (path) {
-  var s = "<span onclick='WebUI.enter(StartPage);'>" +translateKey('startPage')+"</span>";
-  if ((path.length > 0) && $("PagePath")) {
-    if ($("PagePath"))$("PagePath").innerHTML = s + " &gt; " + path;
+  var title=document.title;
+  if (title != 'OpenCCU WebUI') {
+    title = '[' + title + '] ';
+  } else {
+    title = '';
   }
-  else {
-    if ($("PagePath"))$("PagePath").innerHTML = "<span id='PagePathSpan'>"+translateKey('startPage')+"</span>";
+
+  if ($("PagePath")) {
+    var s = '';
+    if (path.length > 0) {
+      s = "<span onclick='WebUI.enter(StartPage);'>" + title + translateKey('startPage') + "&nbsp;&gt " + path;
+    } else {
+      s = "<span id='PagePathSpan'>" + title + translateKey('startPage') + "</span>";
+    }
+
+    $("PagePath").innerHTML = s;
+    translatePage("#PagePath");
   }
-  translatePage("#PagePath");
-};
+};  
 
 
 
@@ -35242,7 +35252,7 @@
 
 
 showDutyCycle = function() {
-  if (jQuery("#PagePathSpan").text() == translateKey("startPage")) {
+  if (jQuery("#PagePathSpan").text().endsWith(translateKey("startPage"))) {
     var ifaceBidCosRF = "BidCos-RF",
       ifaceHmIPRF = "HmIP-RF",
       arInterfaceDutyCycle = {},
@@ -50168,6 +50178,11 @@
   CreateCPPopup("/config/cp_maintenance.cgi");
 };
 
+showAdvancedSettingsCP = function()
+{
+  CreateCPPopup("/config/cp_advancedsettings.cgi");
+};
+
 showNewFirmwareDownload = function() {
   CreateCPPopup("/config/cp_maintenance.cgi", "downloadOnly=1");
 };
